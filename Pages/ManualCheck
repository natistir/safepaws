import React, { useState, useEffect } from "react";
import { Shield, Sun, AlertTriangle } from "lucide-react";
import { WalkingSession } from "@/entities/WalkingSession";
import TemperatureDial from "../components/TemperatureDial";

export default function ManualCheck() {
  const [temperature, setTemperature] = useState(75);
  const [unit, setUnit] = useState("fahrenheit");

  const convertTemperature = (temp, fromUnit, toUnit) => {
    if (fromUnit === toUnit) return temp;
    if (fromUnit === "fahrenheit" && toUnit === "celsius") {
      return ((temp - 32) * 5) / 9;
    }
    if (fromUnit === "celsius" && toUnit === "fahrenheit") {
      return (temp * 9) / 5 + 32;
    }
    return temp;
  };

  const handleUnitChange = () => {
    const newUnit = unit === "fahrenheit" ? "celsius" : "fahrenheit";
    const convertedTemp = convertTemperature(temperature, unit, newUnit);
    setUnit(newUnit);
    setTemperature(Math.round(convertedTemp));
  };

  const getSafetyAssessment = (temp, tempUnit) => {
    const tempInF = tempUnit === "celsius" ? convertTemperature(temp, "celsius", "fahrenheit") : temp;
    
    if (tempInF < 77) {
      return {
        level: "safe",
        title: "Safe for Walking",
        description: "Perfect conditions for a longer walk! Your dog's paws will be comfortable.",
        icon: Shield,
        gradient: "from-green-500 to-emerald-600",
        bgColor: "bg-green-50",
        duration: "30-60 minutes"
      };
    } else if (tempInF <= 86) {
      return {
        level: "caution",
        title: "Use Caution",
        description: "Keep walks short and watch for signs of discomfort. Consider protective booties.",
        icon: Sun,
        gradient: "from-orange-500 to-yellow-500",
        bgColor: "bg-orange-50",
        duration: "10-15 minutes"
      };
    } else {
      return {
        level: "dangerous",
        title: "Too Hot - Stay Inside",
        description: "Surface temperature can cause serious paw burns. Wait for cooler conditions.",
        icon: AlertTriangle,
        gradient: "from-red-500 to-pink-500",
        bgColor: "bg-red-50",
        duration: "Avoid walking"
      };
    }
  };

  const saveSession = async () => {
    const safety = getSafetyAssessment(temperature, unit);
    await WalkingSession.create({
      temperature,
      unit,
      location: "Manual Entry",
      safety_level: safety.level,
      recommendation: safety.description,
      walk_duration: safety.level === "safe" ? 45 : safety.level === "caution" ? 12 : 0
    });
  };

  useEffect(() => {
    saveSession();
  }, [temperature, unit]);

  const safety = getSafetyAssessment(temperature, unit);

  return (
    <div className="max-w-4xl mx-auto space-y-10">
      {/* Header */}
      <div className="text-center">
        <h1 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6 tracking-tight">
          Manual Temperature Check
        </h1>
        <p className="text-xl text-gray-600 max-w-2xl mx-auto font-medium">
          Use the dial below to set the current surface temperature
        </p>
      </div>

      {/* Temperature Dial */}
      <div className="ios-card p-10">
        {/* Unit Toggle */}
        <div className="flex justify-center mb-10">
          <div className="flex items-center bg-gray-100 rounded-2xl p-2">
            <button
              className={`px-6 py-3 rounded-xl font-semibold transition-all duration-300 ${
                unit === 'fahrenheit' 
                  ? 'bg-white text-blue-600 shadow-lg' 
                  : 'text-gray-600 hover:text-gray-900'
              }`}
              onClick={() => unit !== 'fahrenheit' && handleUnitChange()}
            >
              °F
            </button>
            <button
              className={`px-6 py-3 rounded-xl font-semibold transition-all duration-300 ${
                unit === 'celsius' 
                  ? 'bg-white text-blue-600 shadow-lg' 
                  : 'text-gray-600 hover:text-gray-900'
              }`}
              onClick={() => unit !== 'celsius' && handleUnitChange()}
            >
              °C
            </button>
          </div>
        </div>

        {/* Beautiful Temperature Dial */}
        <div className="flex justify-center mb-10">
          <TemperatureDial
            temperature={temperature}
            onTemperatureChange={setTemperature}
            unit={unit}
            size={340}
            interactive={true}
          />
        </div>

        {/* Quick Set Buttons */}
        <div className="flex flex-wrap gap-3 justify-center">
          {(unit === "fahrenheit" ? [70, 77, 86, 95] : [21, 25, 30, 35]).map(temp => (
            <button
              key={temp}
              className="ios-button px-6 py-3 text-gray-700 font-semibold hover:bg-blue-50 hover:text-blue-600"
              onClick={() => setTemperature(temp)}
            >
              {temp}°{unit === "fahrenheit" ? "F" : "C"}
            </button>
          ))}
        </div>
      </div>

      {/* Safety Assessment */}
      <div className={`ios-card p-8 ${safety.bgColor} border-l-4 border-opacity-50`} 
           style={{borderLeftColor: safety.gradient.includes('green') ? '#10b981' : safety.gradient.includes('orange') ? '#f59e0b' : '#ef4444'}}>
        <div className="flex items-start gap-6">
          <div className={`w-16 h-16 rounded-2xl bg-gradient-to-br ${safety.gradient} flex items-center justify-center shadow-lg`}>
            <safety.icon className="w-8 h-8 text-white" />
          </div>
          <div className="flex-1">
            <h3 className="text-2xl font-bold text-gray-900 mb-3">
              {safety.title}
            </h3>
            <p className="text-gray-700 mb-6 leading-relaxed font-medium text-lg">
              {safety.description}
            </p>
            <div className="text-base font-semibold text-gray-700">
              Recommended walk duration: <span className="text-blue-600">{safety.duration}</span>
            </div>
          </div>
        </div>
      </div>

      {/* Tips */}
      <div className="ios-card p-10">
        <h3 className="text-3xl font-bold text-gray-900 mb-8 text-center">
          Hot Weather Walking Tips
        </h3>
        <div className="grid md:grid-cols-2 gap-8">
          <div className="space-y-4">
            <h4 className="text-xl font-bold text-gray-900">Before Walking:</h4>
            <ul className="text-gray-700 space-y-3 font-medium">
              <li className="flex items-start gap-3">
                <span className="w-2 h-2 bg-blue-500 rounded-full mt-2 flex-shrink-0"></span>
                Test the pavement with your hand for 5 seconds
              </li>
              <li className="flex items-start gap-3">
                <span className="w-2 h-2 bg-blue-500 rounded-full mt-2 flex-shrink-0"></span>
                Check your dog's paw pads for cracks or injuries
              </li>
              <li className="flex items-start gap-3">
                <span className="w-2 h-2 bg-blue-500 rounded-full mt-2 flex-shrink-0"></span>
                Bring water for both you and your dog
              </li>
              <li className="flex items-start gap-3">
                <span className="w-2 h-2 bg-blue-500 rounded-full mt-2 flex-shrink-0"></span>
                Consider protective dog booties
              </li>
            </ul>
          </div>
          <div className="space-y-4">
            <h4 className="text-xl font-bold text-gray-900">During Walking:</h4>
            <ul className="text-gray-700 space-y-3 font-medium">
              <li className="flex items-start gap-3">
                <span className="w-2 h-2 bg-green-500 rounded-full mt-2 flex-shrink-0"></span>
                Walk on grass or shaded areas when possible
              </li>
              <li className="flex items-start gap-3">
                <span className="w-2 h-2 bg-green-500 rounded-full mt-2 flex-shrink-0"></span>
                Watch for signs of paw discomfort
              </li>
              <li className="flex items-start gap-3">
                <span className="w-2 h-2 bg-green-500 rounded-full mt-2 flex-shrink-0"></span>
                Take frequent water breaks
              </li>
              <li className="flex items-start gap-3">
                <span className="w-2 h-2 bg-green-500 rounded-full mt-2 flex-shrink-0"></span>
                Keep walks short in hot conditions
              </li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
}